from collections.abc import Sequence
import logging

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    Application,
    CallbackQueryHandler,
    CommandHandler,
    ConversationHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

import config
import database_fns
import photos

logger = logging.getLogger(__name__)

# Set the logging level to DEBUG
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)

# Define conversation states
MENU, TOPIC_A, TOPIC_B, TOPIC_C, TOPIC_D = range(5)


async def photo_message_handler(
    update: Update, context: ContextTypes.DEFAULT_TYPE
) -> None:
    if update.effective_chat.id not in config.REPLY_WITH_PHOTO_ID_USER_IDS:
        logger.info(
            "Unauthorized user attempted to send a photo: "
            f"{update.effective_chat.id}. Allowed users: {config.REPLY_WITH_PHOTO_ID_USER_IDS}"
        )
        return

    # Extract the file ID of the last photo in the message (highest resolution)
    photo_file_id = update.message.photo[-1].file_id

    # Reply to the user with the photo file ID
    await context.bot.send_message(
        chat_id=update.effective_chat.id, text=f"Photo ID: {photo_file_id}"
    )


async def _send_delimiter(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="üü¶" * 10,
    )


def _get_info_keyboard() -> list[list[InlineKeyboardButton]]:
    return [
        [InlineKeyboardButton("–ó–∞—á–µ–º –Ω—É–∂–µ–Ω —ç—Ç–æ—Ç –±–æ—Ç?", callback_data="why_bot_exists")],
        [
            InlineKeyboardButton(
                "–ì–æ–ª–æ—Å—É—é –Ω–∞ —É—á–∞—Å—Ç–∫–µ", callback_data="moscow_in_person_info"
            )
        ],
        [
            InlineKeyboardButton(
                "–ì–æ–ª–æ—Å—É—é –≤ –î–≠–ì, –ø—Ä–æ–ø–∏—Å–∫–∞ –≤ –ú–æ—Å–∫–≤–µ",
                callback_data="voting_in_moscow_deg",
            )
        ],
        [
            InlineKeyboardButton(
                "–ì–æ–ª–æ—Å—É—é –≤ –î–≠–ì, –ø—Ä–æ–ø–∏—Å–∫–∞ –Ω–µ –≤ –ú–æ—Å–∫–≤–µ",
                callback_data="voting_in_region_deg",
            )
        ],
        [InlineKeyboardButton("–ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –î–≠–ì?", callback_data="how_deg_works")],
    ]


async def start(
    update: Update,
    context: ContextTypes.DEFAULT_TYPE,
) -> int:
    logging.debug(f"Got start from {update.effective_chat.id}")

    database_fns.ensure_user_in_db(update)

    reply_markup = InlineKeyboardMarkup(_get_info_keyboard())
    # Example of sending photos (replace 'URL_or_file_id' with actual URLs or file identifiers)
    # await context.bot.send_photo(chat_id=update.effective_chat.id, photo='URL_or_file_id_of_your_photo')
    # await context.bot.send_photo(chat_id=update.effective_chat.id, photo='URL_or_file_id_of_your_second_photo')

    await context.bot.send_photo(
        chat_id=update.effective_chat.id,
        photo=photos.ENTRANCE_PHOTO_ID,
    )

    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="""
–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ–ª–æ—Å–æ–≤ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–î–≠–ì). –ù–µ –¥–∞–π—Ç–µ —É–∫—Ä–∞—Å—Ç—å —Å–≤–æ–π –≥–æ–ª–æ—Å!

–°–µ–π—á–∞—Å –±–æ—Ç –≤—ã–¥–∞—ë—Ç –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í–æ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à –≥–æ–ª–æ—Å.

–ü—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ –≤ –î–≠–ì –≤ –±—é–ª–ª–µ—Ç–µ–Ω–µ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É ¬´–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ¬ª, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.

–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö –Ω–∏–∂–µ ‚¨áÔ∏è
""".strip(),
        reply_markup=reply_markup,
    )

    return MENU


async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    assert query is not None
    assert update.effective_chat is not None

    await query.answer()

    await query.edit_message_reply_markup(reply_markup=None)
    await _send_delimiter(update, context)

    # Send new message with information based on the button pressed
    if query.data == "back":
        return await start(update, context)
    if query.data in [
        "why_bot_exists",
        "moscow_in_person_info",
        "voting_in_moscow_deg",
        "voting_in_region_deg",
        "how_deg_works",
    ]:
        image_ids = {
            "moscow_in_person_info": photos.MOSCOW_IN_PERSON_INFO,
            "voting_in_moscow_deg": photos.VOTING_IN_MOSCOW_DEG,
            "voting_in_region_deg": photos.VOTING_IN_REGION_DEG,
        }.get(query.data, [])

        if not isinstance(image_ids, list):
            image_ids = [image_ids]

        text = {
            "why_bot_exists": """
–í–æ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –î–≠–ì —É –∏–∑–±–∏—Ä–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—á—ë—Ç —Å–≤–æ–µ–≥–æ –≥–æ–ª–æ—Å–∞.

–ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, –∏–∑-–∑–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —ç—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–ª–æ –∫—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞–∫–æ–π –æ–ø—Ü–∏–µ–π.

–ë–æ—Ç –ø—Ä–∏–∑–≤–∞–Ω —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ç–∞–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.

–í–æ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç, —É—á–∏—Ç—ã–≤–∞–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –≤–∞—à –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ–ª–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, –¥–ª—è –∏–∑–±–∏—Ä–∞—Ç–µ–ª–µ–π –∏–∑ –ú–æ—Å–∫–≤—ã, –±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç, –∑–∞ –∫–æ–≥–æ –≤ –∏—Ç–æ–≥–µ —É—á—ë–ª—Å—è –≥–æ–ª–æ—Å.
""".strip(),
            "moscow_in_person_info": """
–¢–†–ï–ë–£–ô–¢–ï –ë–£–ú–ê–ñ–ù–´–ô –ë–Æ–õ–õ–ï–¢–ï–ù–¨. –í–∞–º –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ ‚Äî –ù–ï –°–û–ì–õ–ê–®–ê–ô–¢–ï–°–¨.

–¢–µ—Ä–º–∏–Ω–∞–ª—ã –Ω–∞ —É—á–∞—Å—Ç–∫–∞—Ö —ç—Ç–æ —Ç–∞–∫–æ–π –∂–µ –î–≠–ì, –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –∏ —Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º—ã–π. –ì–æ–ª–æ—Å—É–π—Ç–µ –±—É–º–∞–∂–Ω—ã–º –±—é–ª–ª–µ—Ç–µ–Ω–µ–º.

–ï—Å–ª–∏ –≤—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –≥–æ–ª–æ—Å—É–µ—Ç–µ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª, —Ç–æ –≤–µ–¥–∏—Ç–µ —Å–µ–±—è —Ç–∞–∫, —á—Ç–æ –≤—ã –≥–æ–ª–æ—Å—É–µ—Ç–µ —á–µ—Ä–µ–∑ –î–≠–ì.
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø–∏—Å–∫–∞ –≤ –ú–æ—Å–∫–≤–µ, –≥–æ–ª–æ—Å—É—é —á–µ—Ä–µ–∑ –î–≠–ì", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –æ–±–µ–∑–æ–ø–∞—Å–∏—Ç—å —Å–≤–æ–π –≥–æ–ª–æ—Å.
""".strip(),
            "voting_in_moscow_deg": """
–í–∞–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É –æ–∫–æ–ª–æ –ø—É–Ω–∫—Ç–∞ ¬´–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ¬ª. –û–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–∞–º–æ–º –Ω–∏–∑—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∂–∞—Ç –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–¥–µ–ª–∞–Ω –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–º. 

‚ùóÔ∏è–ï—Å–ª–∏ –Ω–µ –ø—Ä–æ–∂–∞—Ç—å —ç—Ç—É –≥–∞–ª–∫—É, –≥–æ–ª–æ—Å –ª–µ–≥–∫–æ —Å—Ñ–∞–ª—å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–¥–∏—Ç—å.‚ùóÔ∏è

–ü–æ—Å–ª–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤—ã –ø–æ–ø–∞–¥—ë—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π (—Ç—Ä–µ—Ç—å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞).

‚ùóÔ∏è–í–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä (–æ–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ –¥–µ—Ñ–∏—Å–æ–≤). –¢–∞–∫ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à –≥–æ–ª–æ—Å.‚ùóÔ∏è

–ö–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø–æ–¥—Å—á—ë—Ç, –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç, –∑–∞ –∫–æ–≥–æ –≤ –∏—Ç–æ–≥–µ —É—á—ë–ª—Å—è –≤–∞—à –≥–æ–ª–æ—Å.
""".strip(),
            "voting_in_region_deg": """
–í —Å–∞–º–æ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–∫–∞–∂—É—Ç –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ.

–ü–æ—Å–ª–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ —Ä–∞—Å–∫—Ä—ã—Ç—å –ø–æ–ª–µ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏" –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–≤–µ —Å—Ç—Ä–æ–∫–∏:
- –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
- senderPublicKey

‚ùóÔ∏è–ó–∞–ø–∏—à–∏—Ç–µ —ç—Ç–∏ –Ω–æ–º–µ—Ä–∞, –≤–æ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ–≤–µ—Ä–∏—Ç—å —É—á—ë—Ç –≥–æ–ª–æ—Å–∞‚ùóÔ∏è

–ü–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏ —Å—Ä–∞–≤–Ω–∏—Ç—å –ø–æ–ª–µ senderPublicKey, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏.

–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –î–≠–ì –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –Ω–∏–∫–æ–º—É, –∫–∞–∫ —É—á—ë–ª—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥–æ–ª–æ—Å. –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç, —á—Ç–æ –≤–∞—à –≥–æ–ª–æ—Å –ø–æ–ø–∞–ª –≤ –æ–±—â–∏–π –∏—Ç–æ–≥.

–ö–æ–≥–¥–∞ –ø–æ–¥–≤–µ–¥—É—Ç –∏—Ç–æ–≥–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ senderPublicKey –≤ –±–æ—Ç. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —É—á—ë–ª—Å—è –ª–∏ –≥–æ–ª–æ—Å.
""".strip(),
            "how_deg_works": """
–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –æ–Ω–ª–∞–π–Ω, –±–µ–∑ –±—É–º–∞–∂–Ω–æ–≥–æ –±—é–ª–ª–µ—Ç–µ–Ω—è. –í—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –±—Ä–∞—É–∑–µ—Ä, –≥–æ–ª–æ—Å—É–µ—Ç–µ, –≤–∞—à –≥–æ–ª–æ—Å —à–∏—Ñ—Ä—É–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–∞–º –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∏ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.

–°–∏—Å—Ç–µ–º–∞ –î–≠–ì –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–∞ –∏ –Ω–µ–ø—Ä–æ–≤–µ—Ä—è–µ–º–∞. –° –ø–æ–º–æ—â—å—é –î–≠–ì –ª–µ–≥–∫–æ –ø–æ–¥–¥–µ–ª–∞—Ç—å –≥–æ–ª–æ—Å–∞ –∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Ñ–∞–ª—å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –î–≠–ì –∏ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è –Ω–µ –¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–∏–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è–º –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º —ç–∫—Å–ø–µ—Ä—Ç–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Å—Ç–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã.

–í 2021 –≥–æ–¥—É –î–≠–ì –ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–±–æ—Ä–æ–≤ –¥–µ–ø—É—Ç–∞—Ç–æ–≤ –ì–æ—Å–¥—É–º—ã –≤ –ú–æ—Å–∫–≤–µ. –ü–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∞–Ω–∞–ª–∏–∑–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏, –≤—ã—è–≤–ª–µ–Ω—ã –º–∞—Å—Å–æ–≤—ã–µ —Ñ–∞–ª—å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ–ª–æ—Å–æ–≤ –≤ –ø–æ–ª—å–∑—É –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –æ—Ç –ø–∞—Ä—Ç–∏–∏ –≤–ª–∞—Å—Ç–∏.

–ü—Ä–æ —Ñ–∞–ª—å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ 2021 –≥–æ–¥—É: https://novayagazeta.ru/articles/2021/09/30/mandaty-polzuiutsia-vbrosom
–ü—Ä–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã –î–≠–ì –≤ –ú–æ—Å–∫–≤–µ: https://habr.com/ru/articles/689002/
""".strip(),
        }[query.data]

        for image_id in image_ids:
            await context.bot.send_photo(
                chat_id=update.effective_chat.id,
                photo=image_id,
            )

        # After providing information, offer to go back to the main menu
        keyboard = _get_info_keyboard() + [
            [InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=text,
            reply_markup=reply_markup,
        )

        return MENU

    return await start(update, context)


def main() -> None:
    application = Application.builder().token(config.BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            MENU: [CallbackQueryHandler(menu_handler)],
        },
        fallbacks=[CommandHandler("start", start)],
    )

    application.add_handler(conv_handler)
    application.add_handler(MessageHandler(filters.PHOTO, photo_message_handler))

    application.run_polling()


if __name__ == "__main__":
    main()
